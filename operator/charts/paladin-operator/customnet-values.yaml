# This is the custom values.yaml file for the Paladin Operator Helm chart.
# It is meant for installing the Paladin Operator when the PaladinNode needs to be highly costumized.
mode: customnet
 
paladinNodes:

paladin:
  image:
    repository: ghcr.io/lf-decentralized-trust-labs/paladin
    tag: main
    pullPolicy: Always
  labels:
    app: paladin
  baseNodePort: 31548
   
postgres: # the postgres container runs as a sidecar to the paladin container
  image:
    repository: postgres
    tag: latest
    pullPolicy: Always


# ==============================================
# From here on, the values are the same as in the default values.yaml file
# ==============================================

# Default values for paladin-operator
operator:
  name: paladin-operator
  namespace: paladin
  image:
    repository: ghcr.io/lf-decentralized-trust-labs/paladin-operator
    tag: main
    pullPolicy: Always

  serviceAccount:
    create: true
    automount: true
    annotations: {}

  podSecurityContext:
    runAsNonRoot: true

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]

  livenessProbe:
    httpGet:
      path: /healthz
      port: 8081
      scheme: HTTP
  readinessProbe:
    httpGet:
      path: /readyz
      port: 8081
      scheme: HTTP

  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi

  env:
    - name: CONFIG_PATH
      value: /etc/config

  # Volumes configuration
  volumes:
  - name: config
    configMap:
      name: paladin-operator     

  volumeMounts:
  - name: config
    mountPath: /etc/config/config.json    # Where the file will be mounted in the container
    subPath: config.json                  # The key (file) from the ConfigMap to mount
                     
  labels:
    control-plane: controller-manager

  annotations: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}

  service:
    type: ClusterIP
    port: 80

  configMap:
    # Referring to the external config.yaml file
    dataFile: assets/config.json
# Prometheus dependencies
prometheus:
  enabled: false
  prometheus:
    namespace: prometheus 
  alertmanager:
    enabled: false 
  server:
    enabled: false
  pushgateway:
    enabled: false  # Enable if you need the push gateway

# Install CRDs as part of the chart installation
# When this is set to false, the CRDs are expected to be installed separately
installCRDs: false


